.正则表达式（RegExp）:
正则是对字符串执行模式匹配的对象，常用于表单验证。

创建正则表达式:
1.字面量创建
var a =/^[a-z]/ig

2.构造函数创建
var a =new RegExp("^[a-z]","ig")

常见的正则表达式模式：

修饰符
i：    代表忽略大小写
g：    全局匹配（如果不加g，匹配到第一个正则就结束了）

开头和结尾
^        必须以什么什么开头
$        必须以什么什么结尾

\w        单词字符，包括字母数字下划线
\W        非单词字符
\d         数字，0-9
\D         非数字
\s           空白符（空格、制表符、回车符、换行符等看不见的字符）
\S            非空白符
\t            制表符
\r            回车符
\n            换行符

重复次数
n?            匹配0次或者1次n，可以不出现，或者出现一次
n*            匹配0此或多次n，可以不出现，也可以出现1次，2次，3次
n+           匹配至少有1次或者多次n，必须出现，且至少有一次
n{2}         匹配正好两个连续的"n"
n{2,5}       匹配至少两个，最多5个连续的“n”


方括号
[]          其中的规则可以任意选择其一进行匹配
            比如[abc]可以匹配任何一个包括a或b或c的字符串
            [^abc]匹配不在方括号之间的任何字符
            [a-z]匹配a到z的任何字符，类似的还有[0-9],[A-Z]

圆括号
()        一个作用是分组，通常与" | "符号一起使用
            另一个作用是：具有记忆功能，被()包裹起来的字符会被记忆，一般用于replace替换字符

任意字符
.            除换行符和其他终止符之外的任意字符

转义字符
\n            正则表达式中，许多标点符号具有特殊意义，若想将他们作为普通字符进行匹配，则需要在前面加上反射杠
        如想匹配普通的{}:/\{\}/

汉字
[\u4E00-\u9FFF]
