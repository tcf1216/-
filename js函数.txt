什么事函数？
	--函数是可以被调用的可重复使用的代码块

	--javaScript代码有语句组成，多天语句组合在一起，用花括号包起来，并给它一个响亮的名字
那么这货就变身为函数了.

为什么需要用函数？
	1.避免页面一加载就执行程序
	2.可以重复执行
	3.可以用函数在适当的时机做适当的功能

系统函数（全局函数）
	全局函数/全局变量 都是属于window的属性和方法。
	在书写程序时，使用全局变量window可以省略不写
	省略和不省略的区别：如果不是存在的变量，加上window不会报错，不加window会报错



自定义函数
	function 函数名称(){
		函数体/代码块
	}
	函数名称()//调用某某方法

什么是形参，什么是实参？

形参：函数中声明的，用来接收传参的，叫做“形参”
实参：调用函数时，传递给函数的传参，叫做“实参”

作用域：

全局作用域、局部作用域

全局变量：在函数声明的变量，可以在整个网页内访问，关闭页面后，变量被释放

局部变量：在函数内声明的变量，只能在该函数内访问，退出函数后，变量被释放

如果在函数外和函数内声明了相同的名称的变量，函数内的变量会覆盖函数外的变量（就近原则）

在声明函数的时候，凡是没有用var关键字，而是直接赋值的变量均为全局变量

递归函数：递归函数就是自己调用自己

例：	function show(x){
		if(x==1){
			return 1
		}else{
			return x*show(x-1)//return(10*(9*(8*(7*(6*(5*(4*(3*(2*(1))))))))))
		}
	}
	console.log(show(10))

自调用函数：
	自行执行的函数，也可以理解为“立刻执行的函数”，在函数声明的后面加()调用自身
	function(){/*code*/}();
	但是由于js预编译的时候，会跳过function，试图去执行();故而会故障，所以我们要给
function加上一个括号包起来，让js正确识别
	(function(){/*code*/})();

变量提升：
	js引擎读取一段js代码，首先“预解析”，就是逐行读取js代码，寻求全局变量和全局函数，
遇到全局变量，把变量的值变为undefindm，遇到全局函数，直接存在内存中，这个过程如果发现语法
错误，预解析终止

闭包：
	闭包就是能够读取其他函数内部变量的函数。在js中，只有函数内部的子函数才能读取局部
变量，所以闭包可以理解成“定义在函数内部的函数”在本质上，闭包是可以将函数内部和函数外部
链接起来的桥梁

闭包的作用：1.可以访问到局部变量，用闭包防止变量污染。
	   2.变量始终保存在函数内存中，没有被回收






